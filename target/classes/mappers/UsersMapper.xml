<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tust.app.dao.UserMapper">

    <resultMap id="UsersMap" type="com.tust.app.dao.UserMapper">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="state" column="state"/>
        <result property="roleId" column="roleId"/>
    </resultMap>

    <!--
        List<Users> selectAllUsers();
    Users selectUsersById(Integer id);
    List<Users> selectNewsByUsername(String username);

    void createUser(Users users);
    boolean deleteUsersById(Integer id);
    boolean updateUsers(Users users);
    -->

    <select id="selectAllUsers" resultType="com.tust.app.domain.Users">
        select * from t_user
    </select>

    <select id="selectIdByUsername" resultType="Integer">
        select id from t_user where username=#{username}
    </select>

    <select id="selectUsersById" resultType="com.tust.app.domain.Users">
        select * from t_user where id=#{id}
    </select>

    <select id="selectNewsByUsername" resultType="com.tust.app.domain.Users">
        select * from t_user where username like '%${username}%'
    </select>

    <insert id="createUser">
        insert into t_user(username, password, email, state, roleId)
        values(#{username}, #{password}, #{email}, #{state}, #{roleId})
    </insert>

    <delete id="deleteUsersById">
        delete from t_user where id=#{id}
    </delete>

    <update id="updateUsers">
        update t_user set username=#{username},
        password=#{password},email=#{email},
        state=#{state},roleId=#{roleId} where id=#{id}
    </update>



</mapper>